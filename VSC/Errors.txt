1 = Attribute named argument expression must be a constant
2 = The modifier `{0}' is not valid for this item
3 = Constraints are not allowed on non-generic declarations
4 = `{0}': A constraint references nonexistent type parameter `{1}'
5 = An implementation of `{0}' query expression pattern could not be found. Are you missing `Std.Linq' using directive.
6 = This name `{0}' does not exist in the current context
7 = The name `{0}' is ambigious
8 = The name `{0}' does not need type arguments because it's a local name
9 = The parameter name `{0}' is a duplicate
10 = The parameter name `{0}' conflicts with a compiler generated name
11 = The `partial' modifier can be used only immediately before `class', `struct', `interface', or `void' keyword
12 = Invalid number
13 = Floating-point constant is outside the range of type `{0}'
14 = Unrecognized escape sequence
15 = Filename, single-line comment or end-of-line expected
16 = Missing identifier to pre-processor directive
17 = Integral constant is too large
18 = Invalid preprocessor directive
19 = Unexpected processor directive
20 = Cannot define or undefine preprocessor symbols after first token in file
21 = Preprocessor directives must appear as the first non-whitespace character on a line
22 = Single-line comment or end-of-line expected
23 = XML comment is not placed on a valid language element
24 = Expected `#endif' directive
25 = #endregion directive expected
26 = Wrong preprocessor directive
27 = #error: 
28 = The line number specified for #line directive is missing or invalid
29 = Newline in constant
30 = Unterminated string literal
31 = Unexpected character
32 = Identifier too long (limit is 512 chars)
33 = A single-line comment may not be used in an interpolated string
34 = End-of-file found, '*/' expected
35 = Missing close delimiter `}' for interpolated expression
36 = Keyword, identifier, or string expected after verbatim specifier: @
37 = Empty character literal
38 = Too many characters in character literal
39 = A `{0}' character may only be escaped by doubling `{0}{0}' in an interpolated string
40 = Empty interpolated expression format specifier
41 = A interpolated expression format specifier may not contain trailing whitespace
42 = Assembly attributes must precede all other elements except import clauses
43 = A package declaration cannot have modifiers or attributes
44 = Unexpected symbol
45 = Package elements cannot be explicitly declared as private, protected or protected internal
46 = Attributes must be attached to class, delegate, enum, interface or struct
47 = Attributes cannot be generic
48 = Named attribute arguments must appear after the positional arguments
49 = Unexpected symbol `{0}' in class, struct, or interface member declaration
50 = Primary constructor body is not allowed
51 = Primary constructor already has a body
52 = The constant `{0}' cannot be marked static
53 = A const field requires a value to be provided
54 = Fields cannot have void type
55 = `{0}': interface members cannot have a definition
56 = Member modifier `{0}' must precede the member type and name
57 = A params parameter must be the last parameter in a formal parameter list
58 = The parameter modifier `self' can only be used on the first parameter
59 = Optional parameter cannot precede required parameters
60 = Array type specifier, [], must appear before parameter name
61 = Cannot specify a default value for the `{0}' parameter
62 = Optional parameter is not valid in this context
63 = The parameter modifiers `self' and `ref' cannot be used altogether
64 = The parameter modifiers `self' and `out' cannot be used altogether
65 = A parameter cannot have specified more than one modifier
66 = Cannot specify a default value for a parameter array
67 = The parameter modifiers `self' and `params' cannot be used altogether
68 = The params parameter cannot be declared as ref or out
69 = property or indexer cannot have void type
70 = interface members cannot have a definition
71 =  property or indexer cannot have void type
72 = indexer return type cannot be `void'
73 = Indexers must have at least one parameter
74 = property or indexer must have at least one accessor
75 = Semicolon after method or accessor block is not valid
76 = A get or set accessor expected
77 = Property accessor already defined
78 = Interfaces cannot contain fields or constants
79 = Interfaces cannot contain operators
80 = Interfaces cannot contain contructors
81 = Interfaces cannot declare classes, structs, interfaces, delegates, or enumerations
82 = User-defined operators cannot return void
83 = Overloadable binary operator expected
84 = Overloaded unary operator `{0}' takes one parameter
85 = Overloadable unary operator expected
86 = Overloaded binary operator `{0}' takes two parameters
87 = Overloaded unary operator `implicit' takes one parameter
88 = Overloaded unary operator `explicit' takes one parameter
89 =  The static constructor must be parameterless
90 = Structs parameterless instance constructor must be public
91 = `{0}': static constructor cannot have an explicit `self' or `super' constructor call
92 = Only class types can contain destructor
93 = An explicit interface implementation of an event must use property syntax
94 = Event in interface cannot have add or remove accessors
95 = event in interface cannot have an initializer
96 = abstract event cannot have an initializer
97 = event property must have add, remove and raise accessors
98 = An add, raise or remove accessor expected
99 = An add, raise or remove accessor must have a body
100 = An attribute is missing member declaration
101 = Unexpected symbol `}' in class, struct, or interface member declaration
102 = Enums cannot have type parameters
103 = Type parameter declaration must be an identifier not a type
104 = Invalid parameter type `void'
105 = Invalid base type `{0}'
106 = An element initializer cannot be empty
107 = Named argument `{0}' specified multiple times
108 = An argument is missing
109 = Array creation must have array size or array initializer
110 = Invalid rank specifier, expecting `,' or `]'
111 = static constructor cannot have an access modifier
112 = Keyword `void' cannot be used in this context
113 = Invalid anonymous type member declarator. Anonymous type members must be a member assignment, simple name or member access expression
114 = Duplicate `{0}' modifier
115 = More than one protection modifier specified
116 = Keyword `new' is not allowed on package elements
117 = A constraint clause has already been specified for type parameter `{0}'
118 = The `new()' constraint must be the last constraint specified
119 = The `class' or `struct' constraint must be the first constraint specified
120 = The `new()' constraint cannot be used with the `struct' constraint
121 = Invalid constraint type `{0}'
122 = Unexpected symbol '}', expected '{'
123 = An embedded statement may not be a declaration or labeled statement
124 = Unexpected symbol }
125 = Syntax error, bad array declarator. To declare a managed array the rank specifier precedes the variable's identifier. To declare a fixed size buffer field, use the fixed keyword before the field type
126 = A const field requires a value to be provided
127 = A stackalloc expression requires [] after type
128 = ; expected
129 = Unexpected symbol ')', expected ';'
130 = Type and identifier are both required in a foreach statement
131 = Expression expected after yield return
132 = Try statement already has an empty except block
133 = A type that derives from `Std.Exception', `object', or `string' expected
134 = Unexpected symbol `{0}'. A query body must end with select or group clause
135 = Only assignment, call, increment, decrement, await, and new object expressions can be used as a statement
136 = The parameter modifier `{0}' is not valid in this context
137 = Duplicate parameter modifier `{0}'
138 = Type expected
139 = Possible mistaken empty statement
140 = Named arguments must appear after the positional arguments
141 = You must provide an initializer in a fixed or using statement declaration
142 = Syntax error,
143 = Parsing error
144 = Internal compiler error during parsing
145 = Identifier expected, `{0}' is a keyword
146 = The target expression `{0}' is ambigious
147 = The target expression `{0}' does not exist in the current context
148 = Type `{0}' does not contain a definition for `{1}' and no extension method `{1}' of type `{0}' could be found.
149 = An `import' directive can only be applied to namespaces but `{0}' denotes a type.
150 = The imported package or type '{0}' does not exist in the current context
151 = The attribute type `{0}' does not exist in the current context
152 = `{0}': an abstract class cannot be sealed or static
153 = `{0}': a class cannot be both static and sealed
154 = `{0}': Static classes cannot have primary constructor
155 = A generic type cannot derive from `{0}' because it is an attribute class
156 = Primary constructor of type `{0}' has parameter of same name as containing type
157 = Primary constructor of type `{0}' has parameter of same name as type parameter `{1}'
158 = Duplicate base class `{0}' for type definition `{1}'
159 = `{0}': Classes cannot have multiple base classes (`{1}' and `{2}')
160 = `{0}': Base class must be specified as first, `{1}' is not a the first base class
161 = Type `{0}' is not an interface
162 = Inconsistent accessibility: base interface `{0}' is less accessible than interface `{1}'
163 = `{0}' is a sealed or a static class.
164 = Type `{0}' is not sbyte,byte,short,ushort,int,uint,long,ulong
165 =  Circular base class dependency involving `{0}' and `{1}'
166 = Inherited interface `{0}' causes a cycle in the interface hierarchy of `{1}'",
167 = The attribute type `{0}' does not exist in the current context
168 = Cannot apply attribute class `{0}' because it is abstract
169 = Cannot apply attribute class `{0}' because it is static
170 = `{0}': is not an attribute class
171 = A constructor has been found for `{0}' but an error has occured
172 = No suitable constructor has been found for `{0}'
173 = 
174 = 
175 = 
176 = 
177 = 
178 = 
179 = 
180
181
182 =

183
W184
W185
W186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
W201
202
203
204
205
206
207
208
209
210
211
212
..............
219
220
221
222
223
224
225
226
227
228
W229
w230
w231
232
233
W234
W235
236
237
